{
  "name": "API Workflow DAG",
  "version": "1.0",
  "metadata": {
    "description": "API based workflow with parallel processing support",
    "type": "api-workflow"
  },
  "nodes": {
    "node_a": {
      "id": "node_a",
      "type": "start",
      "role": "api-gateway",
      "config": {
        "api": {
          "type": "http",
          "method": "POST",
          "url": "http://localhost:8001",
          "route": "/workflow/start",
          "params": "workflow_id",
          "timeout": 30000
        }
      },
      "dependencies": [],
      "next": ["node_b"]
    },
    "node_b": {
      "id": "node_b",
      "type": "task",
      "role": "business-api",
      "config": {
        "api": {
          "type": "http",
          "method": "POST",
          "url": "http://localhost:8002",
          "route": "/process",
          "params": "node_id",
          "timeout": 30000,
          "retry": {
            "maxAttempts": 3,
            "backoff": "exponential"
          }
        },
        "parallel": {
          "enabled": true,
          "maxConcurrent": 2
        }
      },
      "dependencies": ["node_a"],
      "next": ["node_c", "node_d"]
    },
    "node_c": {
      "id": "node_c",
      "type": "task",
      "role": "business-api",
      "config": {
        "api": {
          "type": "http",
          "method": "POST",
          "url": "http://localhost:8003",
          "route": "/process",
          "params": "node_id",
          "timeout": 30000,
          "retry": {
            "maxAttempts": 3,
            "backoff": "exponential"
          }
        }
      },
      "dependencies": ["node_b"],
      "next": ["node_d"]
    },
    "node_d": {
      "id": "node_d",
      "type": "task",
      "role": "business-api",
      "config": {
        "api": {
          "type": "http",
          "method": "POST",
          "url": "http://localhost:8004",
          "route": "/process",
          "params": "node_id",
          "timeout": 30000,
          "retry": {
            "maxAttempts": 3,
            "backoff": "exponential"
          }
        }
      },
      "dependencies": ["node_b", "node_c"],
      "next": ["node_e"]
    },
    "node_e": {
      "id": "node_e",
      "type": "end",
      "role": "result-aggregator",
      "config": {
        "aggregation": {
          "type": "merge",
          "sourceNodes": ["node_d"],
          "responseMapping": {
            "template": "result_template_v1"
          }
        }
      },
      "dependencies": ["node_d"],
      "next": []
    }
  },
  "edges": [
    {
      "source": "node_a",
      "target": "node_b",
      "type": "sync"
    },
    {
      "source": "node_b",
      "target": "node_c",
      "type": "sync"
    },
    {
      "source": "node_b",
      "target": "node_d",
      "type": "sync"
    },
    {
      "source": "node_c",
      "target": "node_d",
      "type": "sync"
    },
    {
      "source": "node_d",
      "target": "node_e",
      "type": "sync"
    }
  ]
}